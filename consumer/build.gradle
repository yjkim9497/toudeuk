

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'application'  // 추가
}

// 메인 클래스 지정 (실제 메인 클래스 경로로 변경하세요)
mainClassName = 'com.toudeuk.Consumer'  // 추가

shadowJar {
    archiveBaseName.set('consumer')
    archiveClassifier.set('')
    archiveVersion.set('1.0-SNAPSHOT')
    manifest {
        attributes 'Main-Class': mainClassName  // 추가
    }
    mergeServiceFiles()  // 추가
}

// 기존 jar 태스크에도 메인 클래스 지정
jar {
    manifest {
        attributes 'Main-Class': mainClassName  // 추가
    }
}

group = 'com.toudeuk'
version = '1.0-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // KAFKA
    implementation 'org.apache.kafka:kafka-clients:3.0.0'
    implementation 'org.apache.kafka:kafka-streams:3.0.0'
    implementation 'org.apache.kafka:kafka_2.13:3.0.0'

    // Lombok
    compileOnly("org.projectlombok:lombok:1.18.26")
    annotationProcessor("org.projectlombok:lombok:1.18.26")
    testCompileOnly("org.projectlombok:lombok:1.18.26")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.26")

    // JSON Converter
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.5'

    // HikariCP
    implementation 'com.zaxxer:HikariCP:5.0.1'

    //  DB connection
    implementation 'mysql:mysql-connector-java:8.0.28'

    // SLF4J
    implementation 'org.slf4j:slf4j-simple:1.7.30'
}

test {
    useJUnitPlatform()
}

// application 플러그인 설정
application {
    mainClass = mainClassName
}

// 한글 인코딩 문제 해결을 위한 설정
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

// 실행 시 인코딩 설정
tasks.withType(JavaExec) {
    systemProperty "file.encoding", "UTF-8"
}